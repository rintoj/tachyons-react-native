"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const react_native_1 = require("react-native");
exports.styles = react_native_1.StyleSheet.create({
    absolute: { position: 'absolute' },
    absoluteFill: { top: 0, right: 0, bottom: 0, left: 0 },
    b: { fontWeight: 'bold' },
    bDashed: { borderStyle: 'dashed' },
    bDotted: { borderStyle: 'dotted' },
    bSolid: { borderStyle: 'solid' },
    ba: { borderStyle: 'solid', borderWidth: 1 },
    bb: { borderBottomWidth: 1 },
    bb0: { borderBottomWidth: 0 },
    bl: { borderLeftWidth: 1 },
    bl0: { borderLeftWidth: 0 },
    bn: { borderWidth: 0 },
    bottom0: { bottom: 0 },
    bottom1: { bottom: -16 },
    bottom2: { bottom: -32 },
    br: { borderRightWidth: 1 },
    br0: { borderRightWidth: 0 },
    br1: { borderRadius: 2 },
    br2: { borderRadius: 4 },
    br3: { borderRadius: 8 },
    br4: { borderRadius: 16 },
    brBottom: { borderTopLeftRadius: 0, borderTopRightRadius: 0 },
    brLeft: { borderTopRightRadius: 0, borderBottomRightRadius: 0 },
    brPill: { borderRadius: 9999 },
    brRight: { borderTopLeftRadius: 0, borderBottomLeftRadius: 0 },
    brTop: { borderBottomLeftRadius: 0, borderBottomRightRadius: 0 },
    bt: { borderTopWidth: 1 },
    bt0: { borderTopWidth: 0 },
    bw0: { borderWidth: 0 },
    bw1: { borderWidth: 2 },
    bw2: { borderWidth: 4 },
    bw3: { borderWidth: 8 },
    bw4: { borderWidth: 16 },
    bw5: { borderWidth: 32 },
    center: { marginRight: 'auto', marginLeft: 'auto' },
    dim: { opacity: 1 },
    dimActive: { opacity: 0.8 },
    dtFixed: { width: '100%' },
    f1: { fontSize: 48 },
    f2: { fontSize: 36 },
    f3: { fontSize: 24 },
    f4: { fontSize: 20 },
    f5: { fontSize: 16 },
    f6: { fontSize: 14 },
    f7: { fontSize: 12 },
    flex: { flex: 1 },
    flex0: { flex: 0 },
    flex1: { flex: 0.1 },
    flex2: { flex: 0.2 },
    flex3: { flex: 0.3 },
    flex4: { flex: 0.4 },
    flex5: { flex: 0.5 },
    flex6: { flex: 0.6 },
    flex7: { flex: 0.7 },
    flex8: { flex: 0.8 },
    flex9: { flex: 0.9 },
    flexAuto: { minWidth: 0 },
    flexColumn: { flexDirection: 'column' },
    flexColumnReverse: { flexDirection: 'column-reverse' },
    flexNowrap: { flexWrap: 'nowrap' },
    flexRow: { flexDirection: 'row' },
    flexRowReverse: { flexDirection: 'row-reverse' },
    flexWrap: { flexWrap: 'wrap' },
    fsNormal: { fontStyle: 'normal' },
    fw1: { fontWeight: '100' },
    fw2: { fontWeight: '200' },
    fw3: { fontWeight: '300' },
    fw4: { fontWeight: '400' },
    fw5: { fontWeight: '500' },
    fw6: { fontWeight: '600' },
    fw7: { fontWeight: '700' },
    fw8: { fontWeight: '800' },
    fw9: { fontWeight: '900' },
    h1: { height: 16 },
    h100: { height: '100%' },
    h2: { height: 32 },
    h25: { height: '25%' },
    h3: { height: 64 },
    h4: { height: 128 },
    h5: { height: 256 },
    h50: { height: '50%' },
    h75: { height: '75%' },
    hAuto: { height: 'auto' },
    i: { fontStyle: 'italic' },
    indent: { marginTop: 0, marginBottom: 0 },
    itemsBaseline: { alignItems: 'baseline' },
    itemsCenter: { alignItems: 'center' },
    itemsEnd: { alignItems: 'flex-end' },
    itemsStart: { alignItems: 'flex-start' },
    itemsStretch: { alignItems: 'stretch' },
    justifyAround: { justifyContent: 'space-around' },
    justifyBetween: { justifyContent: 'space-between' },
    justifyCenter: { justifyContent: 'center' },
    justifyEnd: { justifyContent: 'flex-end' },
    justifyStart: { justifyContent: 'flex-start' },
    left0: { left: 0 },
    left1: { left: -16 },
    left2: { left: -32 },
    lhCopy: { lineHeight: 1.5 },
    lhSolid: { lineHeight: 1 },
    lhTitle: { lineHeight: 1.25 },
    ma0: { margin: 0 },
    ma1: { margin: 4 },
    ma2: { margin: 8 },
    ma3: { margin: 16 },
    ma4: { margin: 32 },
    ma5: { margin: 64 },
    ma6: { margin: 128 },
    ma7: { margin: 256 },
    mb0: { marginBottom: 0 },
    mb1: { marginBottom: 4 },
    mb2: { marginBottom: 8 },
    mb3: { marginBottom: 16 },
    mb4: { marginBottom: 32 },
    mb5: { marginBottom: 64 },
    mb6: { marginBottom: 128 },
    mb7: { marginBottom: 256 },
    measure: { maxWidth: 480 },
    measureNarrow: { maxWidth: 320 },
    measureWide: { maxWidth: 544 },
    mh0: { marginLeft: 0, marginRight: 0 },
    mh1: { marginLeft: 4, marginRight: 4 },
    mh2: { marginLeft: 8, marginRight: 8 },
    mh3: { marginLeft: 16, marginRight: 16 },
    mh4: { marginLeft: 32, marginRight: 32 },
    mh5: { marginLeft: 64, marginRight: 64 },
    mh6: { marginLeft: 128, marginRight: 128 },
    mh7: { marginLeft: 256, marginRight: 256 },
    minH100: { minHeight: '100%' },
    ml0: { marginLeft: 0 },
    ml1: { marginLeft: 4 },
    ml2: { marginLeft: 8 },
    ml3: { marginLeft: 16 },
    ml4: { marginLeft: 32 },
    ml5: { marginLeft: 64 },
    ml6: { marginLeft: 128 },
    ml7: { marginLeft: 256 },
    mlAuto: { marginLeft: 'auto' },
    mr0: { marginRight: 0 },
    mr1: { marginRight: 4 },
    mr2: { marginRight: 8 },
    mr3: { marginRight: 16 },
    mr4: { marginRight: 32 },
    mr5: { marginRight: 64 },
    mr6: { marginRight: 128 },
    mr7: { marginRight: 256 },
    mrAuto: { marginRight: 'auto' },
    mt0: { marginTop: 0 },
    mt1: { marginTop: 4 },
    mt2: { marginTop: 8 },
    mt3: { marginTop: 16 },
    mt4: { marginTop: 32 },
    mt5: { marginTop: 64 },
    mt6: { marginTop: 128 },
    mt7: { marginTop: 256 },
    mv0: { marginTop: 0, marginBottom: 0 },
    mv1: { marginTop: 4, marginBottom: 4 },
    mv2: { marginTop: 8, marginBottom: 8 },
    mv3: { marginTop: 16, marginBottom: 16 },
    mv4: { marginTop: 32, marginBottom: 32 },
    mv5: { marginTop: 64, marginBottom: 64 },
    mv6: { marginTop: 128, marginBottom: 128 },
    mv7: { marginTop: 256, marginBottom: 256 },
    mw1: { maxWidth: 16 },
    mw100: { maxWidth: '100%' },
    mw2: { maxWidth: 32 },
    mw3: { maxWidth: 64 },
    mw4: { maxWidth: 128 },
    mw5: { maxWidth: 256 },
    mw6: { maxWidth: 512 },
    mw7: { maxWidth: 768 },
    mw8: { maxWidth: 1024 },
    mw9: { maxWidth: 1536 },
    mwNone: { maxWidth: 'none' },
    na1: { margin: -4 },
    na2: { margin: -8 },
    na3: { margin: -16 },
    na4: { margin: -32 },
    na5: { margin: -64 },
    na6: { margin: -128 },
    na7: { margin: -256 },
    nb1: { marginBottom: -4 },
    nb2: { marginBottom: -8 },
    nb3: { marginBottom: -16 },
    nb4: { marginBottom: -32 },
    nb5: { marginBottom: -64 },
    nb6: { marginBottom: -128 },
    nb7: { marginBottom: -256 },
    nl1: { marginLeft: -4 },
    nl2: { marginLeft: -8 },
    nl3: { marginLeft: -16 },
    nl4: { marginLeft: -32 },
    nl5: { marginLeft: -64 },
    nl6: { marginLeft: -128 },
    nl7: { marginLeft: -256 },
    noFlex: { flex: -1 },
    normal: { fontWeight: 'normal' },
    nr1: { marginRight: -4 },
    nr2: { marginRight: -8 },
    nr3: { marginRight: -16 },
    nr4: { marginRight: -32 },
    nr5: { marginRight: -64 },
    nr6: { marginRight: -128 },
    nr7: { marginRight: -256 },
    nt1: { marginTop: -4 },
    nt2: { marginTop: -8 },
    nt3: { marginTop: -16 },
    nt4: { marginTop: -32 },
    nt5: { marginTop: -64 },
    nt6: { marginTop: -128 },
    nt7: { marginTop: -256 },
    o0: { opacity: 0 },
    o025: { opacity: 0.025 },
    o05: { opacity: 0.05 },
    o10: { opacity: 0.1 },
    o100: { opacity: 1 },
    o20: { opacity: 0.2 },
    o30: { opacity: 0.3 },
    o40: { opacity: 0.4 },
    o50: { opacity: 0.5 },
    o60: { opacity: 0.6 },
    o70: { opacity: 0.7 },
    o80: { opacity: 0.8 },
    o90: { opacity: 0.9 },
    overflowHidden: { overflow: 'hidden' },
    overflowVisible: { overflow: 'visible' },
    pa0: { padding: 0 },
    pa1: { padding: 4 },
    pa2: { padding: 8 },
    pa3: { padding: 16 },
    pa4: { padding: 32 },
    pa5: { padding: 64 },
    pa6: { padding: 128 },
    pa7: { padding: 256 },
    pb0: { paddingBottom: 0 },
    pb1: { paddingBottom: 4 },
    pb2: { paddingBottom: 8 },
    pb3: { paddingBottom: 16 },
    pb4: { paddingBottom: 32 },
    pb5: { paddingBottom: 64 },
    pb6: { paddingBottom: 128 },
    pb7: { paddingBottom: 256 },
    ph0: { paddingLeft: 0, paddingRight: 0 },
    ph1: { paddingLeft: 4, paddingRight: 4 },
    ph2: { paddingLeft: 8, paddingRight: 8 },
    ph3: { paddingLeft: 16, paddingRight: 16 },
    ph4: { paddingLeft: 32, paddingRight: 32 },
    ph5: { paddingLeft: 64, paddingRight: 64 },
    ph6: { paddingLeft: 128, paddingRight: 128 },
    ph7: { paddingLeft: 256, paddingRight: 256 },
    pl0: { paddingLeft: 0 },
    pl1: { paddingLeft: 4 },
    pl2: { paddingLeft: 8 },
    pl3: { paddingLeft: 16 },
    pl4: { paddingLeft: 32 },
    pl5: { paddingLeft: 64 },
    pl6: { paddingLeft: 128 },
    pl7: { paddingLeft: 256 },
    pr0: { paddingRight: 0 },
    pr1: { paddingRight: 4 },
    pr2: { paddingRight: 8 },
    pr3: { paddingRight: 16 },
    pr4: { paddingRight: 32 },
    pr5: { paddingRight: 64 },
    pr6: { paddingRight: 128 },
    pr7: { paddingRight: 256 },
    pt0: { paddingTop: 0 },
    pt1: { paddingTop: 4 },
    pt2: { paddingTop: 8 },
    pt3: { paddingTop: 16 },
    pt4: { paddingTop: 32 },
    pt5: { paddingTop: 64 },
    pt6: { paddingTop: 128 },
    pt7: { paddingTop: 256 },
    pv0: { paddingTop: 0, paddingBottom: 0 },
    pv1: { paddingTop: 4, paddingBottom: 4 },
    pv2: { paddingTop: 8, paddingBottom: 8 },
    pv3: { paddingTop: 16, paddingBottom: 16 },
    pv4: { paddingTop: 32, paddingBottom: 32 },
    pv5: { paddingTop: 64, paddingBottom: 64 },
    pv6: { paddingTop: 128, paddingBottom: 128 },
    pv7: { paddingTop: 256, paddingBottom: 256 },
    relative: { position: 'relative' },
    right0: { right: 0 },
    right1: { right: -16 },
    right2: { right: -32 },
    // rotate135: { transform: [{ rotate: 0 }] },
    // rotate180: { transform: [{ rotate: 0 }] },
    // rotate225: { transform: [{ rotate: 0 }] },
    // rotate270: { transform: [{ rotate: 0 }] },
    // rotate315: { transform: [{ rotate: 0 }] },
    // rotate45: { transform: [{ rotate: 0 }] },
    // rotate90: { transform: [{ rotate: 0 }] },
    selfBaseline: { alignSelf: 'baseline' },
    selfCenter: { alignSelf: 'center' },
    selfEnd: { alignSelf: 'flex-end' },
    selfStart: { alignSelf: 'flex-start' },
    selfStretch: { alignSelf: 'stretch' },
    tc: { textAlign: 'center' },
    // tj: { textAlign: 'justify' },
    tl: { textAlign: 'left' },
    top0: { top: 0 },
    top1: { top: -16 },
    top2: { top: -32 },
    tr: { textAlign: 'right' },
    tracked: { letterSpacing: 1.6 },
    trackedMega: { letterSpacing: 4 },
    trackedTight: { letterSpacing: -0.8 },
    truncate: { overflow: 'hidden' },
    w1: { width: 16 },
    w10: { width: '10%' },
    w100: { width: '100%' },
    w2: { width: 32 },
    w20: { width: '20%' },
    w25: { width: '25%' },
    w3: { width: 64 },
    w30: { width: '30%' },
    w33: { width: '33%' },
    w34: { width: '34%' },
    w4: { width: 128 },
    w40: { width: '40%' },
    w5: { width: 256 },
    w50: { width: '50%' },
    w60: { width: '60%' },
    w70: { width: '70%' },
    w75: { width: '75%' },
    w80: { width: '80%' },
    w90: { width: '90%' },
    wAuto: { width: 'auto' },
    z0: { zIndex: 0 },
    z1: { zIndex: 1 },
    z2: { zIndex: 2 },
    z3: { zIndex: 3 },
    z4: { zIndex: 4 },
    z5: { zIndex: 5 },
    z999: { zIndex: 999 },
    z9999: { zIndex: 9999 },
    zMax: { zIndex: 2147483647 },
    transparent: { backgroundColor: 'transparent' },
    transparentText: { color: 'transparent' },
});
let selectedTheme;
const themes = {};
function addColor(name, color) {
    const style = {};
    style[`${name}`] = { color };
    style[`${name}TextShadow`] = { textShadowColor: color };
    style[`${name}TextDecoration`] = { textDecorationColor: color };
    style[`${name}Bg`] = { backgroundColor: color };
    style[`${name}Ba`] = { borderColor: color };
    style[`${name}Bt`] = { borderTopColor: color };
    style[`${name}Br`] = { borderRightColor: color };
    style[`${name}Bb`] = { borderBottomColor: color };
    style[`${name}Bl`] = { borderLeftColor: color };
    style[`${name}Tint`] = { tintColor: color };
    style[`${name}Overlay`] = { overlayColor: color };
    return style;
}
function addTheme(themeName, colors) {
    if (selectedTheme == undefined) {
        selectedTheme = themeName;
    }
    themes[themeName] = Object.keys(colors).reduce((a, colorName) => {
        return Object.assign({}, a, addColor(colorName, colors[colorName]));
    }, {});
    Object.keys(themes[themeName]).forEach((styleName) => {
        exports.styles[styleName] = undefined;
        Object.defineProperty(exports.styles, styleName, {
            get() { return themes[selectedTheme] && themes[selectedTheme][styleName]; }, set() { },
        });
    });
}
exports.addTheme = addTheme;
function currentTheme() {
    return selectedTheme;
}
exports.currentTheme = currentTheme;
function setTheme(theme) {
    if (Object.keys(themes).indexOf(theme) < 0) {
        throw new Error('Invalid theme name');
    }
    selectedTheme = theme;
}
exports.setTheme = setTheme;
function withTheme(TargetComponent) {
    return class ThemeableComponent extends React.Component {
        constructor(props) {
            super(props);
            this.state = { theme: selectedTheme };
        }
        setTheme(theme) {
            this.setState(state => {
                setTheme(theme);
                return { theme };
            });
        }
        render() {
            return React.createElement(TargetComponent, Object.assign({}, this.props, { theme: this.state.theme, setTheme: (theme) => this.setTheme(theme) }));
        }
    };
}
exports.withTheme = withTheme;
